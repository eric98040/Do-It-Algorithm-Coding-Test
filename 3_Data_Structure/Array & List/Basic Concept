'''
1. 배열
- 메모리의 연속 공간에 값이 채워져 있는 형태의 자료구조
- 배열의 값은 인덱스를 통해 참조할 수 있음, 선언한 자료형의 값만 저장할 수 있음

<특징>

- 인덱스를 사용하여 값에 바로 접근할 수 있음
- 새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어려움
- 값을 삽입하거나 삭제하려면 해당 인덱스 주변에 있는 값을 이동시키는 과정이 필요함
- 배열의 크기는 선언할 때 지정할 수 있으며, 한 번 선언하면 크기를 늘리거나 줄일 수 있음
- 구조가 간단하므로 코딩 테스트에서 많이 이용함

2. 리스트 
- 값과 포인터를 묶은 노드라는 것을 포인터로 연결한 자료구조

<특징>
- 인덱스가 없으므로 값에 접근하려면 head 포인터부터 순서대로 접근해야 함 -> 값에 접근하는 속도가 느림
- 포인터로 연결되어 있으므로 데이터를 삽입하거나 삭제하는 연산 속도가 빠름
- 선언할 때 크기를 별도로 지정하지 않아도 됨. 다시 말해 리스트의 크기는 정해져 있지 않으며, 크기가 변하기 쉬운 데이터를 다룰 때 적합함
- 포인터를 저장할 공간이 필요하므로 배열보다 구조가 복잡함

3. 파이썬에서는 배열과 리스트를 구별하지 않음
- 컴퓨터 공학에서는 일반적으로 배열과 리스트를 구분
- 파이썬에서는 배열과 리스트의 특징까지 모두 가지도록 List를 구현

'''


'''
<파이썬에서의 형 변환>
- int형 변환 : int(data) # float, bool 변환 가능
- float형 변환 : float(data) # int, bool 변환 가능
- str형 변환 : str(data) # int, float, bool, chr 변환 가능
- chr형 변환 : chr(data) # int, bool 변환 가능
- bool형 변환 : bool(data) # int,float,str,chr 변환 가능

'''

